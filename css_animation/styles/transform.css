.box {
    background-color: #FFF; padding: 50px 0;
}
.box #btn1 {
    background-color: #222; color: #fff;
    font-size: 2rem; padding: 20px 6%; border-radius: 8px;
    transform-origin: left right; /* 중심축 변경 */
    transition: transform 0.5s ease;
}
.box:hover  #btn1{
    /* transform 속성은 상황에 따라 기본값 없이 바로 상태선택자에 입력할 수 있다. */
    transform: scale(0.8) /* rotate(-360deg) */;
}
.box a {
    display: block; width: 300px; height: 400px; border-radius: 10px;
    overflow: hidden; position: relative;
    /* 이미지가 부모보다 크면 부모 안에서만 보이게 가리도록 해야한다 */
}
.box a img {width: 100%; transition: transform 0.3s, filter 1s;}
.box a:hover img {transform: scale(0.8) skew(-2deg) translate(20px, 30px);
    filter: brightness(1.1)}
.box a h1 {
    background: rgba(255, 255, 255, 0.8); padding: 20px;
    position: absolute; right: 0; bottom: 0; width: 100%;
    /* absolute를 작성하면 너비를 반드시 작성해야한다. */
}
/* 네비게이션 만들기 (transform활용) */
nav {
    width: 600px; margin: 30px auto 100px; box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
}
nav a {
    /* 공통 a */
    display: block; line-height: 40px; text-align: center;
}
nav .gnb {display: flex;}
nav .gnb > li {flex: 1; position: relative;}
nav .gnb > li > a {}
nav .gnb > li > .sub {
    position: absolute; width: 100%; left: 0; top: 100%;
    background-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-30px); /* 초기값(위로 올리기) */
    opacity: 0; /* 초기숨기기 = a가 그대로 잡히기 때문에 높이값도 함께 작성 opcity0과 display:none은 함께 쓰면 x */
    height: 0; overflow: hidden; /* 대상이 선택되지 않도록 높이값 0 숨기기 */
    transition: transform 0.3s, opacity 0.5s;
}
nav .gnb > li:hover .sub {
    transform: translateY(0); opacity: 1; /* translateY(0)을 주면 초기화 된다 */
    height: max-content; /* 단순 보이는 요소로 애니메이션적용대상이 아님 */
}
nav .gnb > li > .sub li {}
nav .gnb > li > .sub li a {}

nav .gnb2 {
    background-color: beige;
    display: flex;
}
nav .gnb2 > li {flex: 1; position: relative;;}
nav .gnb2 > li > a {background-color: aquamarine;}
nav .gnb2 > li > .sub {
    background-color: lightpink;
    position: absolute; width: 100%; left: 0; top: 100%;
    transform: translateY(-30px); opacity: 0; 
    /* 그냥 내려오는 거는 제자리에서 내려오기 때문에 시작지점을 올린 것 */
    height: 0; overflow: hidden;
    transition: transform 0.5s, opacity 1s;
}
nav .gnb2 > li:hover .sub {
    transform: translateY(0); opacity: 1;
    height: max-content; /* max-content를 줘야 내려오는 효과가 보여 */
}
nav .gnb2 > li > .sub li  {}
nav .gnb2 > li > .sub li a {}
/* transform 3D 원근감 효과 애니메이션 */
.box2 {
    background-color: #FFF; padding: 50px;
    perspective: 1000px; /* 부모에 3D효과 깊이 설정(원근감) */
}
.box2 #btn3 {
    width: 300px; height: 200px; background: #ffdd1b;
    border-radius: 20px;
    transform-style: preserve-3d; /* 자식 요소의 3D 효과 유지*/
    transition: transform 0.6s ease;
}
.box2:hover #btn3 {
    /* transform: rotateX(180deg) rotateZ(100deg); */
    transform: rotateY(180deg)
    /* 앞면밖에 존재하지 않기 때문에 뒷면을 만들고 싶으면 이미지를 앞면 따로 뒷면 따로 만들기 */
}

.box2 .card_container {
    perspective: 1000px; /* 3D 효과 깊이 지정 (부모에) */
}
.box2 .card_container .card {
    width: 780px; height: 500px;
    background-color: #aaa;
    position: relative;
    transform-style: preserve-3d; /* 3d 변환 유지 (자식에) */
    transition: transform 0.5s ease; /* 카드뒤집기의 애니메이션 적용효과 */
}
.box2 .card_container:hover .card {
    transform: rotateY(180deg);
}
.box2 .card_container .card > * {
    font-size: 2rem; font-weight: 800;
    /* 카드 앞면 뒷면 겹치기 */
    position: absolute; left: 0; top: 0; width: 100%; height: 100%;
}
.box2 .card_container .card .front {
    background-color: orange;
}
.box2 .card_container .card .back {
    background-color: lightsalmon;
    transform: rotateY(180deg);
    backface-visibility: hidden;/* 뒤쪽 요소 숨김처리 명령어 */

}

.box2 .card_container2 {
    perspective: 1000px;
}
.box2 .card_container2 .card {
    width: 780px; height: 500px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.5s;
}
.box2 .card_container2:hover .card{
    transform: rotateY(180deg);
}
.box2 .card_container2 .card > * {
    position: absolute; left: 0; top: 0; width: 100%;
}
.box2 .card_container2 .card .front {}
.box2 .card_container2 .card .back {
    transform: rotateY(180deg);
    backface-visibility: hidden;
}

.box2 .card_container3 {
    perspective: 1000px;
}
.box2 .card_container3 .card {
    width: 300px; height: 500px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.5s ease;
}
.box2 .card_container3:hover .card{
    transform: rotateY(180deg) rotateX(10deg) translateZ(50px);
}

.box2 .card_container3 .card > * {
    position: absolute; left: 0; top: 0; width: 100%; height: 100%;
}
.box2 .card_container3 .card .front {}  
.box2 .card_container3 .card .front img {width: 100%;}
.box2 .card_container3 .card .back {
    transform: rotateY(180deg);
    backface-visibility: hidden;
}
.box2 .card_container3 .card .back img {width: 100%;}